{"version":3,"file":"static/js/524.66393bf6.chunk.js","mappings":"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","sources":["components/Reset/ResetFilters.tsx","components/Radio/Radio.tsx","components/RecipeFilters/RecipeCategoryDropdown.tsx","components/Icons/Minus.tsx","components/Icons/Plus.tsx","components/RecipeFilters/RecipeFiltersShow.tsx","components/Slider/Slider.tsx","components/RecipeFilters/RecipePriceDropdown.tsx","components/Icons/Search.tsx","components/Inputs/Search.tsx","components/RecipeFilters/RecipeSearch.tsx","components/RecipeFilters/RecipeTimeDropdown.tsx","components/RecipeFilters/RecipeFilters.tsx","components/Recipes/RecipeCard.tsx","components/Recipes/NoRecipesFound.tsx","components/Recipes/RecipeList.tsx","components/Pagination/PaginationLink.tsx","components/Pagination/Pagination.tsx","pages/RecipesPage.tsx"],"sourcesContent":["import { QUERY_PARAMS } from \"../../constants/router.constants\";\r\nimport useQueryUpdater from \"../hooks/useQueryUpdater\";\r\n\r\nconst ResetFilters = () => {\r\n  const queryUpdater = useQueryUpdater();\r\n\r\n  const onClick = () => {\r\n    queryUpdater({\r\n      [QUERY_PARAMS.CATEGORY]: null,\r\n      [QUERY_PARAMS.SEARCH]: null,\r\n      [QUERY_PARAMS.PRICE]: null,\r\n      [QUERY_PARAMS.TIME_TO_PREPARE]: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button className=\"button is-medium\" onClick={onClick}>\r\n      Reset\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ResetFilters;\r\n","import { MouseEventHandler } from \"react\";\nimport cn from \"classnames\";\nimport \"./radio.scss\";\n\ninterface IRadioProps {\n  className?: string;\n  onClick: MouseEventHandler<HTMLInputElement>;\n  label?: string;\n  isChecked: boolean | undefined;\n  id: string | undefined;\n}\n\nconst Radio = (props: IRadioProps) => {\n  return (\n    <div className={cn(\"field\", props.className)}>\n      <input\n        className=\"is-checkradio is-medium\"\n        id={props.id}\n        type=\"checkbox\"\n        checked={props.isChecked}\n        onClick={props.onClick}\n      />\n      {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    </div>\n  );\n};\n\nexport default Radio;\n","import { useSelector } from \"react-redux\";\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\nimport { getCategoryParams } from \"../../selectors\";\r\nimport { QUERY_PARAMS } from \"../../constants/router.constants\";\r\nimport useQueryUpdater from \"../hooks/useQueryUpdater\";\r\nimport Radio from \"../Radio/Radio\";\r\n\r\ninterface IRecipeCategory {\r\n  text: string;\r\n  value: string;\r\n}\r\n\r\nconst categories: IRecipeCategory[] = [\r\n  {\r\n    text: \"Breakfast\",\r\n    value: \"breakfast\",\r\n  },\r\n  {\r\n    text: \"Lunch\",\r\n    value: \"lunch\",\r\n  },\r\n  {\r\n    text: \"Dinner\",\r\n    value: \"dinner\",\r\n  },\r\n  {\r\n    text: \"Baking\",\r\n    value: \"baking\",\r\n  },\r\n  {\r\n    text: \"Dessert\",\r\n    value: \"dessert\",\r\n  },\r\n  {\r\n    text: \"Snacks\",\r\n    value: \"snacks\",\r\n  },\r\n];\r\n\r\nconst RecipeCategoryDropdown = () => {\r\n  const selectedCategories = useSelector(getCategoryParams);\r\n  const queryUpdater = useQueryUpdater();\r\n\r\n  const updateParam = (newParam: string[] | null) => {\r\n    if (newParam === null || newParam.length === 0) {\r\n      queryUpdater({\r\n        [QUERY_PARAMS.CATEGORY]: null,\r\n      });\r\n    } else {\r\n      queryUpdater({\r\n        [QUERY_PARAMS.CATEGORY]: newParam.join(\",\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const onItemClick = (category: IRecipeCategory) => {\r\n    let newParam: string[] = selectedCategories;\r\n    if (selectedCategories.includes(category.value)) {\r\n      newParam = selectedCategories.filter((cat) => cat !== category.value);\r\n    } else {\r\n      newParam = [...selectedCategories, category.value];\r\n    }\r\n    updateParam(newParam);\r\n  };\r\n\r\n  const onToggleAll = () => {\r\n    updateParam(null);\r\n  };\r\n\r\n  const text =\r\n    selectedCategories.length === 0\r\n      ? \"Categories\"\r\n      : `${selectedCategories.length} selected`;\r\n\r\n  return (\r\n    <Dropdown\r\n      className=\"recipe-filter\"\r\n      id=\"recipe-category-dropdown\"\r\n      label=\"Category\"\r\n      value={`${selectedCategories.length} selected`}\r\n      text={text}\r\n    >\r\n      <Radio\r\n        label=\"All categories\"\r\n        isChecked={selectedCategories.length === 0}\r\n        id=\"recipe-category-radio-all\"\r\n        onClick={onToggleAll}\r\n        className=\"radio-input\"\r\n      />\r\n      {categories.map((category) => (\r\n        <Radio\r\n          id={`recipe-category-radio-${category.value}`}\r\n          isChecked={selectedCategories.includes(category.value)}\r\n          label={category.text}\r\n          onClick={() => onItemClick(category)}\r\n          className=\"radio-input\"\r\n        />\r\n      ))}\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default RecipeCategoryDropdown;\r\n","import { FaMinus } from \"react-icons/fa\";\nimport IconContainer, { IIconProps } from \"./Icon\";\n\nconst MinusIcon = (props: IIconProps) => {\n  return (\n    <IconContainer {...props.containerProps}>\n      <FaMinus />\n    </IconContainer>\n  );\n};\n\nexport default MinusIcon;\n","import { FaPlus } from \"react-icons/fa\";\nimport IconContainer, { IIconProps } from \"./Icon\";\n\nconst PlusIcon = (props: IIconProps) => {\n  return (\n    <IconContainer {...props.containerProps}>\n      <FaPlus />\n    </IconContainer>\n  );\n};\n\nexport default PlusIcon;\n","import MinusIcon from \"../Icons/Minus\";\nimport PlusIcon from \"../Icons/Plus\";\n\ninterface IRecipeFiltersShowProps {\n  isShown: boolean;\n  onClick: () => void;\n}\n\nconst RecipeFiltersShow = (props: IRecipeFiltersShowProps) => {\n  return (\n    <a className=\"recipe-filter-show is-size-5\" onClick={props.onClick}>\n      {props.isShown ? (\n        <>\n          <MinusIcon /> Hide filters\n        </>\n      ) : (\n        <>\n          <PlusIcon /> Show filters\n        </>\n      )}\n    </a>\n  );\n};\n\nexport default RecipeFiltersShow;\n","import { MAX_TIME_VALUE } from \"../../constants/recipe.constants\";\n\ninterface ISliderProps {\n  id: string;\n  min?: number;\n  max: number;\n  value: number | null;\n  onChange: (value: number) => void;\n  label?: string;\n}\n\nconst Slider = (props: ISliderProps) => {\n  return (\n    <div className=\"w-100 mb1 ph3\">\n      {props.label && (\n        <label className=\"label center\" htmlFor={props.id}>\n          {props.label}\n        </label>\n      )}\n      <input\n        id={props.id}\n        className=\"slider is-fullwidth is-large is-success\"\n        step=\"1\"\n        min={props.min}\n        max={props.max}\n        value={props.value ?? MAX_TIME_VALUE}\n        type=\"range\"\n        onChange={(e) => props.onChange(parseInt(e.target.value))}\n      />\n    </div>\n  );\n};\n\nSlider.defaultProps = {\n  min: 0,\n};\n\nexport default Slider;\n","import { useSelector } from \"react-redux\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport { getCostParam } from \"../../selectors\";\nimport { QUERY_PARAMS } from \"../../constants/router.constants\";\nimport useQueryUpdater from \"../hooks/useQueryUpdater\";\nimport {\n  MIN_TIME_VALUE,\n  MAX_TIME_VALUE,\n} from \"../../constants/recipe.constants\";\nimport Slider from \"../Slider/Slider\";\nimport { costText } from \"../helpers/recipeHelpers\";\n\nconst RecipePriceDropdown = () => {\n  const cost = useSelector(getCostParam);\n  const queryUpdater = useQueryUpdater();\n\n  const onValueChange = (value: number) => {\n    queryUpdater({\n      [QUERY_PARAMS.PRICE]: value.toString(),\n    });\n  };\n\n  return (\n    <Dropdown\n      className=\"recipe-filter\"\n      id=\"recipe-cost-dropdown\"\n      label=\"Cost-to-prepare\"\n      text={costText(cost)}\n      value={cost}\n    >\n      <Slider\n        label={costText(cost)}\n        id=\"recipe-time-slider\"\n        min={MIN_TIME_VALUE}\n        max={MAX_TIME_VALUE}\n        value={cost}\n        onChange={onValueChange}\n      />\n    </Dropdown>\n  );\n};\n\nexport default RecipePriceDropdown;\n","import { FaSearch } from \"react-icons/fa\";\r\nimport IconContainer, { IIconProps } from \"./Icon\";\r\n\r\nconst SearchIcon = (props: IIconProps) => {\r\n  return (\r\n    <IconContainer {...props.containerProps}>\r\n      <FaSearch />\r\n    </IconContainer>\r\n  );\r\n};\r\n\r\nexport default SearchIcon;\r\n","import cn from \"classnames\";\nimport SearchIcon from \"../Icons/Search\";\n\ninterface ISearchInputProps {\n  isLoading?: boolean;\n  id: string;\n  value: string | undefined | null;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  label: string;\n}\n\nconst SearchInput = (props: ISearchInputProps) => {\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={props.id}>\n        {props.label}\n        <div className=\"control has-icons-left\">\n          <SearchIcon containerProps={{ className: \"is-left input-icon\" }} />\n          <input\n            id={props.id}\n            className={cn(\"input is-medium\", {\n              \"is-loading\": props.isLoading,\n            })}\n            type=\"text\"\n            placeholder=\"Search\"\n            value={props.value ?? \"\"}\n            onChange={props.onChange}\n          />\n        </div>\n      </label>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import { useSelector } from \"react-redux\";\nimport { QUERY_PARAMS } from \"../../constants/router.constants\";\nimport { getQueryParam } from \"../../selectors\";\nimport SearchInput from \"../Inputs/Search\";\nimport useQueryUpdater from \"../hooks/useQueryUpdater\";\n\nconst RecipeSearch = () => {\n  const param = useSelector(getQueryParam(QUERY_PARAMS.SEARCH));\n  const queryUpdater = useQueryUpdater();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value === \"\" ? null : e.target.value;\n    queryUpdater({\n      [QUERY_PARAMS.SEARCH]: value,\n    });\n  };\n\n  return (\n    <div className=\"width-100\">\n      <SearchInput\n        id=\"recipe-search\"\n        label=\"Search\"\n        value={param}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default RecipeSearch;\n","import { useSelector } from \"react-redux\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport { getTimeParam } from \"../../selectors\";\nimport { QUERY_PARAMS } from \"../../constants/router.constants\";\nimport useQueryUpdater from \"../hooks/useQueryUpdater\";\nimport Slider from \"../Slider/Slider\";\nimport {\n  MAX_TIME_VALUE,\n  MIN_TIME_VALUE,\n} from \"../../constants/recipe.constants\";\nimport { speedText } from \"../helpers/recipeHelpers\";\n\nconst RecipeTimeDropdown = () => {\n  const queryUpdater = useQueryUpdater();\n  const time = useSelector(getTimeParam);\n\n  const onValueChange = (value: number) => {\n    queryUpdater({\n      [QUERY_PARAMS.TIME_TO_PREPARE]: value.toString(),\n    });\n  };\n\n  return (\n    <Dropdown\n      className=\"recipe-filter\"\n      id=\"recipe-time-dropdown\"\n      label=\"Time-to-prepare\"\n      text={speedText(time)}\n      value={time}\n    >\n      <Slider\n        label={speedText(time)}\n        id=\"recipe-time-slider\"\n        min={MIN_TIME_VALUE}\n        max={MAX_TIME_VALUE}\n        value={time}\n        onChange={onValueChange}\n      />\n    </Dropdown>\n  );\n};\n\nexport default RecipeTimeDropdown;\n","import { useState } from \"react\";\nimport ResetFilters from \"../Reset/ResetFilters\";\nimport RecipeCategoryDropdown from \"./RecipeCategoryDropdown\";\nimport RecipeFiltersShow from \"./RecipeFiltersShow\";\nimport RecipePriceDropdown from \"./RecipePriceDropdown\";\nimport RecipeSearch from \"./RecipeSearch\";\nimport RecipeTimeDropdown from \"./RecipeTimeDropdown\";\nimport cn from \"classnames\";\n\nimport \"./recipeFilters.scss\";\n\nconst RecipeFilters = () => {\n  const [isShown, setIsShown] = useState(false);\n\n  return (\n    <div className=\"container mb4\">\n      <div className=\"block w-100\">\n        <RecipeSearch />\n      </div>\n      <div\n        className={cn(\"recipe-filters flex w-100 align-end\", {\n          \"is-shown\": isShown,\n        })}\n      >\n        <div className=\"recipe-filter__group\">\n          <RecipeCategoryDropdown />\n          <RecipePriceDropdown />\n        </div>\n        <div className=\"recipe-filter__group\">\n          <RecipeTimeDropdown />\n        </div>\n        <div className=\"recipe-filter-reset\">\n          <ResetFilters />\n        </div>\n      </div>\n      <div>\n        <RecipeFiltersShow\n          isShown={isShown}\n          onClick={() => setIsShown((state) => !state)}\n        />\n      </div>\n      <hr className=\"hr mt2\" />\n    </div>\n  );\n};\n\nexport default RecipeFilters;\n","import { useNavigate } from \"react-router-dom\";\r\nimport { IRecipe } from \"../../models/recipe.models\";\r\nimport { costText, speedText } from \"../helpers/recipeHelpers\";\r\n\r\ninterface IRecipeProps {\r\n  recipe: IRecipe;\r\n}\r\n\r\nconst RecipeCard = (props: IRecipeProps) => {\r\n  const navigate = useNavigate();\r\n\r\n  const onClick = () => {\r\n    navigate(`/recipes/${props.recipe.id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card recipe-card\" onClick={onClick}>\r\n      <div className=\"card-header\">\r\n        <p className=\"card-header-title\">{props.recipe.name}</p>\r\n      </div>\r\n      <div className=\"card-image\">\r\n        <figure className=\"image is-4by3\">\r\n          <img src={props.recipe.image} alt={props.recipe.name} />\r\n        </figure>\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">{props.recipe.shortDescription}</div>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <p className=\"card-footer-item\">\r\n          Speed: {speedText(props.recipe.time)}\r\n        </p>\r\n        <p className=\"card-footer-item\">Cost: {costText(props.recipe.cost)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n","const NoRecipesFound = () => {\n  return (\n    <div className=\"notification is-warning\">\n      No recipes found. Try changing your filters / search.\n    </div>\n  );\n};\n\nexport default NoRecipesFound;\n","import { useSelector } from \"react-redux\";\nimport { getRecipesForPage } from \"../../selectors\";\nimport RecipeCard from \"./RecipeCard\";\nimport NoRecipesFound from \"./NoRecipesFound\";\n\nimport \"./recipeList.scss\";\n\nconst RecipeList = () => {\n  const recipes = useSelector(getRecipesForPage);\n\n  if (recipes.length === 0) {\n    return <NoRecipesFound />;\n  }\n\n  return (\n    <div className=\"recipe-list mb3\" id=\"recipe-list\">\n      {recipes.map((recipe) => (\n        <RecipeCard recipe={recipe} />\n      ))}\n    </div>\n  );\n};\n\nexport default RecipeList;\n","import { useSelector } from \"react-redux\";\nimport { getPageNumber } from \"../../selectors\";\nimport cn from \"classnames\";\n\ninterface IPaginationLinkProps {\n  pageNumber: number;\n  onClick: () => void;\n}\n\nconst PaginationLink = (props: IPaginationLinkProps) => {\n  const page = useSelector(getPageNumber);\n\n  return (\n    <li>\n      <a\n        onClick={props.onClick}\n        className={cn(\"pagination-link\", {\n          \"is-current\": page === props.pageNumber,\n        })}\n        aria-label={`Goto page ${props.pageNumber}`}\n      >\n        {props.pageNumber}\n      </a>\n    </li>\n  );\n};\n\nexport default PaginationLink;\n","import { useSelector } from \"react-redux\";\nimport { getPageNumber } from \"../../selectors\";\nimport cn from \"classnames\";\nimport useQueryUpdater from \"../hooks/useQueryUpdater\";\nimport { QUERY_PARAMS } from \"../../constants/router.constants\";\nimport { useMemo } from \"react\";\nimport PaginationLink from \"./PaginationLink\";\n\nimport \"./pagination.scss\";\n\ninterface IPaginationProps {\n  totalPages: number;\n  onPageChange?: () => void;\n}\n\nconst Pagination = (props: IPaginationProps) => {\n  const page = useSelector(getPageNumber);\n\n  const queryUpdater = useQueryUpdater();\n\n  const navigatePage = (newPage: number) => {\n    if (newPage > props.totalPages || newPage < 1) return;\n\n    queryUpdater({\n      [QUERY_PARAMS.PAGE_NUMER]: newPage.toString(),\n    });\n\n    if (props.onPageChange !== undefined) {\n      props.onPageChange();\n    }\n  };\n\n  const pageNumbers = useMemo(\n    () =>\n      Array(props.totalPages)\n        .fill(0)\n        .map((_p, i) => i + 1),\n    [props.totalPages]\n  );\n\n  if (props.totalPages <= 1) return null;\n\n  return (\n    <div className=\"container\">\n      <nav className=\"pagination\" role=\"navigation\" aria-label=\"pagination\">\n        <a\n          className={cn(\"pagination-previous\", { \"is-disabled\": page <= 1 })}\n          onClick={() => navigatePage(page - 1)}\n        >\n          Previous\n        </a>\n        <a\n          className={cn(\"pagination-next\", {\n            \"is-disabled\": page >= props.totalPages,\n          })}\n          onClick={() => navigatePage(page + 1)}\n        >\n          Next Page\n        </a>\n        <ul className=\"pagination-list\">\n          {pageNumbers.map((number) => (\n            <PaginationLink\n              key={`pagination-link-${number}`}\n              pageNumber={number}\n              onClick={() => navigatePage(number)}\n            />\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import RecipeFilters from \"../components/RecipeFilters/RecipeFilters\";\nimport RecipeList from \"../components/Recipes/RecipeList\";\nimport { useSelector } from \"react-redux\";\nimport { getTotalRecipeCount, getTotalRecipePages } from \"../selectors\";\nimport Pagination from \"../components/Pagination/Pagination\";\nimport { useRef, useEffect } from \"react\";\nimport { QUERY_PARAMS } from \"../constants/router.constants\";\nimport useQueryUpdater from \"../components/hooks/useQueryUpdater\";\n\nconst RecipesPage = () => {\n  const totalPages = useSelector(getTotalRecipePages);\n  const recipeCount = useSelector(getTotalRecipeCount);\n\n  const prevRecipesRef = useRef<number>(recipeCount);\n  const queryUpdater = useQueryUpdater();\n\n  const recipeListRef = useRef<HTMLDivElement>(null);\n\n  const onPageChange = () => {\n    recipeListRef.current?.scrollIntoView();\n  };\n\n  useEffect(() => {\n    if (prevRecipesRef.current !== recipeCount) {\n      queryUpdater({\n        [QUERY_PARAMS.PAGE_NUMER]: null,\n      });\n    }\n\n    prevRecipesRef.current = recipeCount;\n  }, [recipeCount]);\n\n  return (\n    <div className=\"container\">\n      <section className=\"section\">\n        <h1 className=\"is-size-1\">Recipes</h1>\n        <RecipeFilters />\n        <h2 className=\"is-size-5 mb4 fw6\" ref={recipeListRef}>\n          Showing ({recipeCount}) recipe{recipeCount === 1 ? \"\" : \"s\"}\n        </h2>\n        <RecipeList />\n        <Pagination totalPages={totalPages} onPageChange={onPageChange} />\n      </section>\n    </div>\n  );\n};\n\nexport default RecipesPage;\n"],"names":["queryUpdater","useQueryUpdater","_jsx","className","onClick","_queryUpdater","_defineProperty","QUERY_PARAMS","children","props","_jsxs","cn","id","type","checked","isChecked","label","htmlFor","categories","text","value","selectedCategories","useSelector","getCategoryParams","updateParam","newParam","length","join","concat","Dropdown","Radio","map","category","includes","filter","cat","_toConsumableArray","onItemClick","IconContainer","_objectSpread","containerProps","FaMinus","FaPlus","isShown","_Fragment","MinusIcon","PlusIcon","Slider","_props$value","step","min","max","MAX_TIME_VALUE","onChange","e","parseInt","target","defaultProps","cost","getCostParam","costText","MIN_TIME_VALUE","toString","FaSearch","SearchIcon","isLoading","placeholder","param","getQueryParam","SearchInput","time","getTimeParam","speedText","_useState","useState","_useState2","_slicedToArray","setIsShown","RecipeSearch","RecipeCategoryDropdown","RecipePriceDropdown","RecipeTimeDropdown","ResetFilters","RecipeFiltersShow","state","navigate","useNavigate","recipe","name","src","image","alt","shortDescription","recipes","getRecipesForPage","NoRecipesFound","RecipeCard","page","getPageNumber","pageNumber","navigatePage","newPage","totalPages","undefined","onPageChange","pageNumbers","useMemo","Array","fill","_p","i","role","number","PaginationLink","getTotalRecipePages","recipeCount","getTotalRecipeCount","prevRecipesRef","useRef","recipeListRef","useEffect","current","RecipeFilters","ref","RecipeList","Pagination","_recipeListRef$curren","scrollIntoView"],"sourceRoot":""}